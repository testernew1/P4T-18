package com.example.tests;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import java.util.Random;

import static org.testng.Assert.assertEquals;

import org.testng.annotations.Test;

public class GroupCreationTests extends TestBase {

  public Iterator<Object[]> randomValidGroupGenerator() {
	  List<Object[]> list = new ArrayList<Object[]>();
	  Random rnd = new Random();
	  for (int i = 0; i < 5; i++) {
		  if (rnd.nextInt(10) == 0) {
			  group.n
		  }
		  GroupData group = new GroupData();
		  group.name = "";
		  group.header = "";
		  group.footer = "";
		  list.add(new Object[]{group});
	  }
	  return list.iterator();
  }

  @Test(dataProvider = "randomValidGroupGenerator")
  public void testGroupCreationWithValidData(GroupData group) throws Exception {
	app.getNavigationHelper().openMainPage();
    app.getNavigationHelper().gotoGroupsPage();
    
    // save old state
    List<GroupData> oldList = app.getGroupHelper().getGroups();
    
    // actions    
    app.getGroupHelper().initGroupCreation();
	app.getGroupHelper().fillGroupForm(group);
    app.getGroupHelper().submitGroupCreation();
    app.getGroupHelper().returnToGroupsPage();
    
    // save new state
    List<GroupData> newList = app.getGroupHelper().getGroups();
    
    // compare states
    oldList.add(group);
    Collections.sort(oldList);
    assertEquals(newList, oldList);
  }

}